name: Build, Notarize, and Release Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Add Apple Certificates
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12

          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Build project and sign app bundle
        env:
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
        run: |
          xcodebuild -project Brewster.xcodeproj -scheme Brewster -configuration Release CONFIGURATION_BUILD_DIR=./build

          /usr/bin/codesign --force -s "$MACOS_CERTIFICATE_NAME" --options runtime ./build/Brewster.app -v

      - name: "Notarize app bundle"
        # Extract the secrets we defined earlier as environment variables
        env:
          PROD_MACOS_NOTARIZATION_APPLE_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_APPLE_ID }}
          PROD_MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          PROD_MACOS_NOTARIZATION_PWD: ${{ secrets.PROD_MACOS_NOTARIZATION_PWD }}
        run: |
          echo "Creating keychain profile"
          xcrun notarytool store-credentials "notarytool-profile" --apple-id "$PROD_MACOS_NOTARIZATION_APPLE_ID" --team-id "$PROD_MACOS_NOTARIZATION_TEAM_ID" --password "$PROD_MACOS_NOTARIZATION_PWD"

          echo "Creating temp notarization archive"
          ditto -c -k --keepParent "./build/Brewster.app" "notarization.zip"

          echo "Sending app for notarization"
          xcrun notarytool submit "notarization.zip" --keychain-profile "notarytool-profile" --wait

          echo "Attaching staple"
          xcrun stapler staple "./build/Brewster.app"

      - name: Create ZIP
        run: |
          cd ./build
          zip -r Brewster.zip Brewster.app

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Brewster-zip
          path: ./build/Brewster.zip

      - name: Extract version number
        id: extract_version
        run: |
          VERSION=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "./build/Brewster.app/Contents/Info.plist")
          echo "$VERSION" > version.txt

      - name: Upload version number
        uses: actions/upload-artifact@v3
        with:
          name: version-info
          path: version.txt

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Brewster-zip

      - name: Download version number
        uses: actions/download-artifact@v3
        with:
          name: version-info

      - name: Read version number
        id: read_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Brewster.zip
          asset_name: Brewster.zip
          asset_content_type: application/zip
